Brayan Aliux Reyes Martinez
Actividad 2 - GESTOR DE PROCESOS Y ESTADISTICAS

Paso 1.-Arrancamos un contenedor basado en la imagen NGINX en modo background
	docker run -d --name nginx1 nginx
	docker ps

Paso 2.-Comprobamos los logs. No debe de aparecer nada ya que el contenedor ha sido creado recientemente.
	docker logs nginx1

Paso 3.-Hacemos la conexion al contenedor desde otra consola
	docker exec -it nginx1 bash

Paso 4.-Instalamos con el comando “curl” en el contenedor.
	apt-get update
	apt-get install curl
	curl localhost

Paso 5.- Comprobamos de nuevo los logs.
	docker logs nginx1


Paso 6.-Ejecutamos desde otra terminal, el comando “bash” sobre el contendor creado anteriormente.
	docker exec -it nginx1 bash


Paso 7-.Se puede comprobar con el comando “docker top” aquellos procesos que se están ejecutando en el
contenedor. Se puede ver, además, el comando “bash” que se ha ejecutado con el comando “docker exec”
	docker top nginx1

Paso 8.- Estadísticas de uso del contenedor.
	docker stats nginx1


Paso 9.-Para generar aún más estadísticas, desde otra terminal podemos ejecutar “docker exec” para lanzar el comando “bash” y forzar el movimiento de datos con la utilidad “dd”.
	docker exec -it nginx1 bash
	root@conedor:/# dd if=/dev/zero of=f1.dat bs=1024 count=100000000



Paso 10.-Desde la primera terminal, ejecutar nuevamente el comando “docker stats” para visualizar las
estadísticas recientemente generadas.
	docker stats nginx1



Paso 11.-Los contenedores se pueden "matar" en lugar de detenerlos.
	docker kill nginx1


******************************
**INSPECCION DE CONTENEDORES**
******************************


Paso 1.-Descargamos la imagen de MongoDB
	docker pull mongo
	docker images

Paso 2.-Comprobamos las propiedades de la imagen. Debe salir información muy detallada.
	docker image inspect mongo

Paso 3.-Ahora filtramos la salida utilizando el comando “grep” y extraer información concreta de la imagen, como por ejemplo, la versión de MONGO.
	docker image inspect mongo | grep MONGO_VERSION

Paso 4.-Enviamos la salida a un fichero para visualizarlo después desde un editor de texto.
	docker image inspect mongo > mongo.json

Paso 5.-Creamos un contenedor con dicha imagen.
	docker run -d --name mongo1 mongo
	docker ps

Paso 6.-Lanzamos el comando “docker inspect” contra el contenedor.
	docker inspect mongo1

Paso 7.-Ahora usamos de nuevo el comando “grep” para extraer información concreta del contenedor. En este caso concreto, extraer la dirección IP asignada al contenedor.
	docker inspect mongo1 | grep IPAddress
	docker inspect mongo1 | grep ShmSize

Paso 8.-También existe la posibilidad de utilizar un formato para encontrar información concreta, aunque es necesario conocer el nombre completo de la propiedad a buscar y su jerarquía. Por ejemplo, para saber las direcciones IP que puede tener el contenedor
	docker inspect --format='{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'mongo1

Paso 9.-Para conocer la ubicación concreta del fichero de log.
	docker inspect --format='{{.LogPath}}' mongo1

Paso 10.-Vemos la imagen que se ha utilizado para crear el contenedor.
	docker inspect –format='{{.Config.Image}}' mongo1